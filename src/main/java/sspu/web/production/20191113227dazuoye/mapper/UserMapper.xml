<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sspu.informationsystem.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="sspu.informationsystem.entity.User">
    <!--@Table `user`-->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="u_name" jdbcType="VARCHAR" property="uName" />
    <result column="u_sex" jdbcType="INTEGER" property="uSex" />
    <result column="u_phone" jdbcType="VARCHAR" property="uPhone" />
    <result column="u_account" jdbcType="VARCHAR" property="uAccount" />
    <result column="u_password" jdbcType="VARCHAR" property="uPassword" />
    <result column="u_address" jdbcType="VARCHAR" property="uAddress" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, u_name, u_sex, u_phone, u_account, u_password,u_address
  </sql>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="sspu.informationsystem.entity.User" useGeneratedKeys="true">
    insert into `user` (u_name, u_sex, u_phone, 
      u_account, u_password,u_address)
    values (#{uName,jdbcType=VARCHAR}, #{uSex,jdbcType=INTEGER}, #{uPhone,jdbcType=VARCHAR}, 
      #{uAccount,jdbcType=VARCHAR}, #{uPassword,jdbcType=VARCHAR}, #{uAddress,jdbcType=VARCHAR})
  </insert>
    <select id="getUserInfoByAccount" resultMap="BaseResultMap">
      select *
      from user
      where u_account = #{account,jdbcType=VARCHAR}
    </select>
    <select id="getAllPhone" resultType="java.lang.String">
      select u_phone
      from user
    </select>
  <select id="getAllAccount" resultType="java.lang.String">
    select u_account
    from user
  </select>
    <update id="updateInfoById">
      update user
      set
      u_name = #{uName,jdbcType=VARCHAR},
      u_account = #{uAccount,jdbcType=VARCHAR},
      u_phone = #{uPhone,jdbcType=VARCHAR},
      u_sex = #{uSex,jdbcType=INTEGER}
      u_address = #{uAddress,jdbcType=INTEGER}
      where user_id = #{userId,jdbcType=INTEGER}
    </update>
  <select id="getUserInfoById" resultMap="BaseResultMap">
    select *
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
    <select id="checkAdminState" resultType="integer">
      select *
      from admin_user_bind
      where user_id = #{userId,jdbcType=INTEGER}
    </select>
  <select id="getAllUser" resultMap="BaseResultMap">
    select *
    from user
    where user_id not in (select user_id from admin_user_bind)
  </select>
  <delete id="deleteUser">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
</mapper>